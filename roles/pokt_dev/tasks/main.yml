- name: Download go
  get_url:
    url: 'https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz'
    dest: '/tmp/go{{ go_version }}.linux-amd64.tar.gz'
    mode: '0700'

- name: unarchive go
  unarchive:
    src: '/tmp/go{{ go_version }}.linux-amd64.tar.gz'
    remote_src: yes
    dest: '/usr/local/'
    owner: root
    group: root
    mode: '0755'

- name: Create unprivileged pokt user
  user:
    name: "{{ pokt_user }}"
    password: '*'   # pw is locked/disabled.  key auth only + passwordless sudo
    state: present
    shell: /bin/bash
    createhome: yes
    home: /home/{{ pokt_user }}
    #groups:
    # - sudo     # fixme: least privilege start/stop pokt services

- name: Create go project dirs for pokt user
  file:
    path: "{{ user_dir }}/{{ item }}"
    owner: '{{ pokt_user }}'
    group: '{{ pokt_user }}'
    state: directory
    mode: '0755'
  loop:
    - 'go'
    - 'go/bin'
    - 'go/src'
    - 'go/src/github.com/pokt-network'

- name: copy .profile
  template:
    src: 'profile.j2'
    dest: '{{ user_dir }}/.profile'
    owner: '{{ pokt_user }}'
    group: '{{ pokt_user }}'
    mode: '0600'

- name: install apt packages required for building pokt binary
  apt:
    name:
      - make
      - build-essential
      - gcc
      - git
      - jq
      - chrony
      - curl
      - acl   # needed to prevent errors when building as unprivileged user via become
    state: present
    update_cache: yes

- name: Install pokt daemon from source
  block:
    - name: Clone pokt repo
      become: yes
      become_user: "{{ pokt_user }}"
      git:
        repo: '{{ repo }}'
        dest: '{{ user_dir }}/go/src/github.com/pokt-network/pocket-core'
        version: '{{ pokt_release_tag }}'
        update: yes
        force: yes
        depth: 1

    - name: build and install pokt binary
      become: yes
      become_user: "{{ pokt_user }}"
      command: "go build -o {{ user_dir }}/go/bin/pocket"
      args: 
        chdir: "{{ user_dir }}/go/src/github.com/pokt-network/pocket-core/app/cmd/pocket_core"
      environment:
        PATH: "{{ path }}"
        GOPATH: "{{ user_dir }}/go"


      
